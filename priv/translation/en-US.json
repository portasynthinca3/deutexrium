{
    "command": {
        "reset": {
            "title": "reset",
            "description": "reset something",
            "option": {
                "model": {
                    "title": "model",
                    "description": "reset the generation model of this channel"
                },
                "settings": {
                    "title": "settings",
                    "description": "reset the settings of this channel"
                },
                "server": {
                    "title": "server",
                    "description": "reset the settings of this server"
                }
            }
        },
        "status": {
            "title": "status",
            "description": "key model state information"
        },
        "stats": {
            "title": "stats",
            "description": "my resource usage. this isn't particularly interesting"
        },
        "gen_global": {
            "title": "gen_global",
            "description": "generate a message using the global model"
        },
        "donate": {
            "title": "donate",
            "description": "ways to support my development"
        },
        "privacy": {
            "title": "privacy",
            "description": "privacy policy"
        },
        "support": {
            "title": "support",
            "description": "ways to get support"
        },
        "scoreboard": {
            "title": "scoreboard",
            "description": "top-10 most active users on this server"
        },
        "impostor": {
            "title": "impostor",
            "description": "enable impersonation mode"
        },
        "settings": {
            "title": "settings",
            "description": "configure settings"
        },
        "help": {
            "title": "help",
            "description": "command summary"
        },
        "generate": {
            "title": "generate",
            "description": "generate message(s) using the current channel's model",
            "option": {
                "count": {
                    "title": "count",
                    "description": "the number of messages to generate; defaults to 1"
                }
            }
        },
        "pre_train": {
            "title": "pre_train",
            "description": "trains the local model on previous messages in this channel",
            "option": {
                "count": {
                    "title": "count",
                    "description": "the number of previous messages to train on; defaults to 1k, max is 10k"
                }
            }
        },
        "generate_from": {
            "title": "generate_from",
            "description": "generate a message using the specified channel's model",
            "option": {
                "channel": {
                    "title": "channel",
                    "description": "the channel to use"
                }
            }
        },
        "gen_by_them": {
            "title": "Generate message by them"
        },
        "first_time_setup": {
            "title": "first_time_setup",
            "description": "interactive first time setup"
        },
        "meme": {
            "title": "meme",
            "description": "generate a meme using images and text from this channel"
        }
    },

    "response": {
        "generate": {
            "gen_failed": ":x: **generation failed**",
            "val_too_big": ":x: **value too big**\n[More info](https://deut.portasynthinca3.me/admin-cmd/gen-less-than-number-greater-than)"
        },
        "pre_train": {
            "error": {
                "fetch_failed": ":x: **failed to fetch messages**",
                "too_much": ":x: **too much messages requested (max is `10000`)**"
            },
            "progress": "$1 **trained on `$2` out of `$3` requested messages (skipped `$4`)**\n$5",
            "hint": {
                "okay": "hint: the requested amount was not reached because there aren't that many messages in this channel or some of them don't contain text",
                "empty": "hint: no messages were trained on because there are no messages in this channel, none of them contain text or I am missing the \"Read Message History\" permission in this channel"
            }
        },
        "gen_by_them": {
            "normal": ":white_check_mark: **the response will be sent shortly**",
            "no_impostor": ":question: **the response will be sent as a normal message shortly. Try [/impostor](https://deut.portasynthinca3.me/admin-cmd/impostor)**",
            "no_data": ":x: I haven't heard anything from $1"
        },
        "help": {
            "header": "Deuterium commands",
            "sub": "More extensive help information at https://deut.portasynthinca3.me/",
            "regular": "REGULAR COMMANDS",
            "regular_sub": "can be run by anybody",
            "help": ":information_source: send this message",
            "status": ":green_circle: show key statistics",
            "stats": ":yellow_circle: boring info for nerds",
            "generate": ":1234: generate <count> (1 if omitted) messages using the current channel's model",
            "generate_from": ":level_slider: immediately generate a message using the mentioned channel's model",
            "gen_global": ":rocket: immediately generate a message using the global model",
            "donate": ":question: ways to support my development",
            "privacy": ":lock: my privacy policy",
            "support": ":thinking: ways to get support",
            "scoreboard": ":100: top-10 most active users in this server",
            "admin": "ADMIN COMMANDS",
            "admin_sub": "can only be run by those with the \"administrator\" privilege (unless configured otherwise in Discord server settings)",
            "settings": ":gear: display the configuration menu",
            "impostor": "<:amogus:887939317371138048> enable impersonation mode",
            "pre_train": ":rewind: trains the model on messages already present in this channel (even if I have just been added)",
            "reset": ":x: resets the channel model, channel settings or server settings"
        },
        "donate": {
            "title": "Ways to support Deuterium",
            "share": ":loudspeaker: tell your friends about the bot",
            "invite": "...or invite it to other servers",
            "patreon": ":money_mouth: donate on Patreon",
            "paypal": ":money_mouth: donate via PayPal",
            "dbl": ":speaking_head: vote on DBL"
        },
        "privacy": {
            "title": "Deuterium privacy policy",
            "scope": {
                "title": "1. SCOPE",
                "paragraph": "This message describes how the Deuterium Discord bot (\"Deuterium\", \"the bot\", \"bot\"), its creator (\"I\", \"me\") processes its Users' (\"you\") data"
            },
            "auth": {
                "title": "2. AUTHORIZATION",
                "paragraph": "When you authorize the bot, it is added as a member of the server you've chosen. It has no access to your profile, direct messages or anything that is not related to the selected server."
            },
            "processing": {
                "title": "3. DATA PROCESSING",
                "paragraph": "Deuterium processes messages it receives in server channels according to these rules:\n- if the channel has its \"message collection\" setting set to \"on\", it trains the model on this message and saves said model to disk\n- if the channel has its \"global message collection\" setting set to \"on\", it trains the global model on this message and saves said model do disk"
            },
            "storage": {
                "title": "4. DATA STORAGE",
                "paragraph": "Deuterium stores the following data:\n- Channel settings and statistics (e.g. is message collection allowed, the total number of collected messages, etc.). This data can be viewed using the `/status` and `/settings` commands\n- Local Markov chain model which consists of a set of probabilities of one word coming after another word\n- Global Markov chain model which stores content described above\n- Channel, user and server IDs\n- User-to-message-count relationship for `/scoreboard`\n- Raw message content to re-train the models in case the format changes\nDeuterium does **not** store the following data:\n- User nicknames/tags\n- Any other data not mentioned in the list above"
            },
            "contacting": {
                "title": "5. CONTACTING",
                "paragraph": "Please refer to `/support`"
            },
            "removal": {
                "title": "6. DATA REMOVAL",
                "paragraph": "Due to the nature of Markov chains, it's unfortunately not possible to remove a certain section of the data I store. Only the whole model can be reset.\nIf you wish to reset the channel model, you may use the `/reset model` command.\nIf you wish to reset the global model, please reach out to `/support`."
            },
            "disclosure": {
                "title": "7. DATA DISCLOSURE",
                "paragraph": "I do not disclose collected data to anyone. Furthermore, I do not look at it myself."
            }
        },
        "support": {
            "title": "Deuterium support",
            "server": ":eye: Support server",
            "email": ":e_mail: Email",
            "debug": ":lady_beetle: Debug info"
        },
        "status": {
            "title": "Deuterium status",
            "this_chan": "Messages learned",
            "global": "Messages contributed to the global model",
            "global_total": "Total messages in the global model"
        },
        "stats": {
            "title": "Deuterium resource usage",
            "data_size": {
                "title": "User data size",
                "value": "$1 KiB ($2 MiB)"
            },
            "uptime": "Uptime",
            "existence": "Time since I was created",
            "servers": "Known servers",
            "channels": "Known channels",
            "ram": {
                "title": "Used RAM",
                "value": "$1 MiB"
            },
            "guild_servers": "Discord server OTP servers",
            "channel_servers": "Discord channel OTP servers",
            "processes": "Total BEAM processes",
            "version": "Version"
        },
        "scoreboard": {
            "title": "Deuterium scoreboard",
            "row": "$1 - $2 messages"
        },
        "reset": {
            "settings": ":white_check_mark: **channel settings reset**",
            "model": ":white_check_mark: **channel model reset**",
            "server": ":white_check_mark: **server settings reset**"
        },
        "impostor": {
            "activated": ":white_check_mark: **impersonation activated**",
            "webhook_error": ":x: **bot is missing \"Manage Webhooks\" permission**\n[More info](https://deut.portasynthinca3.me/admin-cmd/impostor)",
            "unknown_error": ":x: **unknown error**"
        }
    },

    "setting": {
        "name": {
            "train": "Train local model",
            "global_train": "Train global model",
            "ignore_bots": "Ignore bots",
            "remove_mentions": "Remove mentions",
            "autogen_rate": "Automatic generation rate",
            "max_gen_len": "Maximum /generate argument",
            "impostor_rate": "Impersonation rate"
        },
        "bin_value": {
            "on": "on",
            "off": "off",
            "no_override": "no override"
        },
        "server": "Applied to all channels, except when they're overridden",
        "current": "Current channel"
    },

    "first_time_setup": {
        "common": {
            "bottom_row": {
                "prev": "← Previous",
                "abort": "⨯ Abort",
                "next": "Next →",
                "accept": "✓ Accept"
            },
            "channel_sel": {
                "all": "All that you have access to",
                "some": "Some of them",
                "all_except": "All except some of them",
                "none": "None of them",
                "restriction": "Which ones?"
            },
            "guild_nb_setting": "Value: $1"
        },
        "steps": {
            "welcome": ":wave: **Welcome to Deuterium interactive first-time setup!**\n- This is a step-by-step setup process\n- All changes you make here are not committed until you click \"Accept\" on the very last page",
            "collection": ":books: I maintain a separate model for every channel. What channels do you want me to train on?",
            "global_collection": ":book: I also maintain one global model, common for all channels in all servers. Which of your channels should I use to train that model?",
            "mention_removal": ":wastebasket: I can also remove links and mentions from generation results. Which of the channels should I do that in?",
            "autogen": ":robot: I will generate messages automatically without being asked to, 1 message per however many real human ones you want. Set the value below, or 0 if you don't want this functionality",
            "impostor": ":disguised_face: I can imitate real people when autogenerating messages by copying their profile pictures and nicknames. Which of the channels should I do that in?",
            "accept": {
                "entry": {
                    "train": "Training models",
                    "global_train": "Training the global model on messages",
                    "remove_mentions": "Removing links and mentions",
                    "autogen_rate": "Generating one message every $1 human ones",
                    "impostor": "Imitating real people"
                },
                "channels": {
                    "all": "in all channels",
                    "some": "only in $1",
                    "all_except": "in all channels except $1",
                    "none": "in none of the channels"
                },
                "text": ":star2: **Almost there**\nClick **Accept** to record all the changes you've made:\n$1\nAfter you click Accept you can edit the settings again with `/settings` or this command."
            },
            "applying": ":yawning_face: please wait while I record your changes",
            "accepted": {
                "error": {
                    "impostor": "I was unable to configure impersonation in $1. Make sure I have the \"Manage Webhooks\" permission and run `/impostor` in those channels"
                },
                "text": {
                    "things_to_do": "Top things to do now:\n      - use `/help` to discover my commands\n      - use `/pre_train` if you want to have fun straight away",
                    "ok": ":white_check_mark: **All done!**\nI have recorded your changes. $1",
                    "error": ":warning: **Errors**\nI have recorded most of your changes, but there were some errors:\n$1\n$2"
                }
            },
            "aborted": ":x: **Aborted**\nNone of the changes were saved"
        }
    }
}